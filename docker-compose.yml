#
# Docker compose file for LMC Base classes.
# Contains services for TANGO database, database device server.
#
# Defines:
#   - tangodb: MariaDB database with TANGO schema
#   - databaseds: TANGO database device server
#   - basedevice: Container having SKABaseDevice class
#   - alarmhandler: Container having SKAAlarmHandler class
#   - capability: Container having SKACapability class
#   - logger: Container having SKALogger class
#   - master: Container having SKAMaster class
#   - obsdevice: Container having SKAObsDevice class
#   - subarray: Container having SKASubarray class
#   - telstate: Container having SKATelState class
#   - logtest: Container having SKASubarray class for SKALogger testing
#
# Requires:
#   - None
#
version: '2'
volumes:
  tangodb: {}

services:
  tangodb:
    image: nexus.engageska-portugal.pt/ska-docker/tango-db:latest
    restart: unless-stopped
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}tangodb
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
    volumes:
      - tangodb:/var/lib/mysql

  databaseds:
    image: nexus.engageska-portugal.pt/ska-docker/tango-cpp:latest
    restart: unless-stopped
    depends_on:
      - tangodb
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}databaseds
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
      - TANGO_HOST=${TANGO_HOST}
    entrypoint:
      - /usr/local/bin/wait-for-it.sh
      - ${MYSQL_HOST}
      - --timeout=30
      - --strict
      - --
      - /usr/local/bin/DataBaseds
      - "2"
      - -ORBendPoint
      - giop:tcp::10000

  basedevice:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}basedevice
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKABaseDevice/01 SKABaseDevice ska/basedevice/01 &&\
             SKABaseDevice 01"

  alarmhandler:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}alarmhandler
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKAAlarmHandler/01 SKAAlarmhandler ska/alarmhandler/01 &&\
             SKAAlarmHandler 01"

  capability:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}capability
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKACapability/01 SKACapability ska/capability/01 &&\
             SKACapability 01"

  logger:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}logger
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKALogger/01 SKALogger ska/logger/01 &&\
             SKALogger 01"

  master:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}master
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKAMaster/01 SKAMaster ska/master/01 &&\
             SKAMaster 01"

  obsdevice:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}obsdevice
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKAObsDevice/01 SKAObsDevice ska/obsdevice/01 &&\
             SKAObsDevice 01"

  subarray:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}subarray
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKASubarray/01 SKASubarray ska/subarray/01 &&\
             SKASubarray 01"

  telstate:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}telstate
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKATelState/01 SKATelState ska/telstate/01 &&\
             SKATelState 01"

  logtest:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/lmcbaseclasses:latest
    restart: unless-stopped
    depends_on:
      - databaseds
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}testdevice
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --add-server SKASubarray/02 SKASubarray logger/test/1 &&\
             SKASubarray 02"
